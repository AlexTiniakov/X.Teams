from goto import with_goto

def primfacs(n):
    i = 2
    primfac = []
    
    if (n == 1 or n == 0):
         primfac.append(n)
         return primfac
    
    while i * i <= n ** 0.5 + 1:
        while n % i == 0:
            primfac.append(i)
            n = n / i
        i = i + 1
    if n > 1:
        primfac.append(n)
    return primfac

@with_goto
def par(up, down):
    label .a
    for i in up:
        for j in down:
            if i == j:
                up.remove(i)
                down.remove(j)
                goto .a
    return (up, down)
                

def up_rez(n):
    rez = [i for i in  range(1,n+1)]
    return rez

def down_rez(m, k):
    return up_rez(m) + up_rez(k)

def c(n, m):
    up = up_rez(n)
    down = down_rez(m, n - m)
    print(up)
    print(down)
    par = par(up, down)
    par_new = par_new(par)
    up = par[0]
    down = par[1]
    up_new = []
    down_new = []
    for i in up:
        buf = primfacs(i)
        for j in buf:
            up_new.append(j)
    #return up / down

print(c(8, 6))

