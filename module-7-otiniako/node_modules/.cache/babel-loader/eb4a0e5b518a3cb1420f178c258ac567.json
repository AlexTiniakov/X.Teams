{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/eth_wallet/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    // data = '';\n    value: function componentWillMount() {\n      this.loadBlockchainData(null);\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function (_loadBlockchainData) {\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      loadBlockchainData.toString = function () {\n        return _loadBlockchainData.toString();\n      };\n\n      return loadBlockchainData;\n    }(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _this2 = this;\n\n        var _url, _url2, web3, network, ProjectId, networks, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!event) {\n                  _url = 'http://localhost:7545';\n                } else {\n                  _url2 = event.target.value;\n                }\n\n                web3 = new Web3(url);\n                _context.next = 4;\n                return web3.eth.net.getNetworkType();\n\n              case 4:\n                network = _context.sent;\n                ProjectId = '723c0eab8d2e4f30a10fc4a2ce2a08f9';\n                networks = ['https://mainnet.infura.io/v3/' + ProjectId, 'https://ropsten.infura.io/v3/' + ProjectId, 'https://rinkeby.infura.io/v3/' + ProjectId, 'https://kovan.infura.io/v3/' + ProjectId, 'https://goerli.infura.io/v3/' + ProjectId, 'http://localhost:7545'];\n                _context.next = 9;\n                return web3.eth.getAccounts();\n\n              case 9:\n                accounts = _context.sent;\n                //console.log('accounts:', accounts)\n                this.setState({\n                  networks: networks.map(function (number) {\n                    return [React.createElement(\"input\", {\n                      type: \"radio\",\n                      name: \"networks\",\n                      onChange: _this2.checkRadio,\n                      id: number,\n                      value: loadBlockchainData,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 36\n                      },\n                      __self: this\n                    }), React.createElement(\"label\", {\n                      for: number,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 36\n                      },\n                      __self: this\n                    }, \" \", number), React.createElement(\"br\", {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 36\n                      },\n                      __self: this\n                    })];\n                  })\n                });\n                this.setState({\n                  accounts: accounts.map(function (number) {\n                    return [React.createElement(\"input\", {\n                      type: \"radio\",\n                      name: \"accounts\",\n                      value: number,\n                      id: number,\n                      onChange: _this2.loadBlockchainData,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 39\n                      },\n                      __self: this\n                    }), React.createElement(\"label\", {\n                      for: number,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 39\n                      },\n                      __self: this\n                    }, \" \", number), React.createElement(\"br\", {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 39\n                      },\n                      __self: this\n                    })];\n                  })\n                });\n                console.log('network:', network);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }())\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"BEST WALLET\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"It is \", new Date().toLocaleTimeString()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Choose network: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), this.state.networks), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Your accounts: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), this.state.accounts));\n    } // checkRadio(event){\n    //   this.data = event.target.value;\n    //   console.log(this.data)\n    // }\n\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/eth_wallet/src/App.js"],"names":["React","Component","Web3","App","loadBlockchainData","event","url","target","value","web3","eth","net","getNetworkType","network","ProjectId","networks","getAccounts","accounts","setState","map","number","checkRadio","console","log","props","state","account","Date","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3'\n\n\nclass App extends Component {\n  // data = '';\n  \n\n  componentWillMount() {\n    this.loadBlockchainData(null)\n  }\n\n  async loadBlockchainData(event) {\n    if (!event) {\n      const url = 'http://localhost:7545'\n    }\n    else {\n      const url = event.target.value\n    }\n    const web3 = new Web3(url)\n    const network = await web3.eth.net.getNetworkType()\n    const ProjectId = '723c0eab8d2e4f30a10fc4a2ce2a08f9'\n    const networks = [\n      'https://mainnet.infura.io/v3/'+ProjectId,\n      'https://ropsten.infura.io/v3/'+ProjectId,\n      'https://rinkeby.infura.io/v3/'+ProjectId,\n      'https://kovan.infura.io/v3/'+ProjectId,\n      'https://goerli.infura.io/v3/'+ProjectId,\n      'http://localhost:7545'\n    ]\n    const accounts = await web3.eth.getAccounts()\n    //console.log('accounts:', accounts)\n\n    this.setState({networks: networks.map((number) =>\n      [<input type=\"radio\" name=\"networks\" onChange={this.checkRadio} id={number} value={loadBlockchainData} />,<label for={number}> {number}</label>, <br></br>])})\n\n    this.setState({accounts: accounts.map((number) =>\n    [<input type=\"radio\" name=\"accounts\" value={number} id={number} onChange={this.loadBlockchainData} />,<label for={number}> {number}</label>, <br></br>])})\n    \n    console.log('network:', network)\n\n    \n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { account: '' }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>BEST WALLET</h1>\n        <h2>It is {new Date().toLocaleTimeString()}</h2>\n        <p>Choose network: <br></br>{this.state.networks}</p>\n        <p>Your accounts: <br></br>{this.state.accounts}</p>\n\n      </div>\n\n\n    );\n  }\n\n  // checkRadio(event){\n  //   this.data = event.target.value;\n  //   console.log(this.data)\n  // }\n  \n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}