{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/eth_wallet/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport Tx from 'ethereumjs-tx';\nimport secp256k1 from 'secp256k1';\nimport { PassThrough } from 'stream';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    // data = '';\n    value: function componentWillMount() {\n      var ProjectId = '723c0eab8d2e4f30a10fc4a2ce2a08f9'; //\"https://mainnet.infura.io/v3/723c0eab8d2e4f30a10fc4a2ce2a08f9\"\n\n      var networks = ['http://localhost:7545', 'https://mainnet.infura.io/v3/' + ProjectId, 'https://ropsten.infura.io/v3/' + ProjectId, 'https://rinkeby.infura.io/v3/' + ProjectId, 'https://kovan.infura.io/v3/' + ProjectId, 'https://goerli.infura.io/v3/' + ProjectId];\n      this.setState({\n        networks: networks.map(function (number) {\n          return React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, number);\n        })\n      });\n      this.loadBlockchainData(null);\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var url, web3;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!event) {\n                  url = 'http://localhost:7545';\n                } else {\n                  url = event.target.value;\n                }\n\n                web3 = new Web3(url);\n                this.setState({\n                  web3: web3\n                }); //setTimeout(()=>{this.setState({web3})},0\n                //const accounts = this.state.users\n                //console.log('accounts', accounts)\n                //this.setState({accounts: accounts})\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      accounts: '',\n      networks: '',\n      balance: '',\n      web3: Web3,\n      users: [],\n      privkey: '',\n      cur_user: '',\n      toAddr: '',\n      value: '',\n      toAddr1: '',\n      value1: '',\n      contrAddr: '',\n      tockens: '',\n      cur_tocken: '',\n      tockens_to_display: '',\n      balanceTocken: '',\n      pubkey: '',\n      multiWalletAddr: '',\n      adresses: [],\n      MultiAddrToDisp: '',\n      signers: '1'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"BEST WALLET\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Choose network:  \", React.createElement(\"select\", {\n        onChange: this.loadBlockchainData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.networks)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Choose Account: \", React.createElement(\"select\", {\n        onChange: this.changeAddr.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.accounts)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"PublikKey: \", this.state.pubkey), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Balance: \", this.state.balance), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create new address\",\n        onClick: this.newAddr.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" Private key (0x...):\", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"privkey\",\n        value: this.state.privkey,\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Import\",\n        onClick: this.importKey.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Send money\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" To Address:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"toAddr\",\n        value: this.state.toAddr,\n        onChange: this.ontoAddrChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" Value in eth:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"value\",\n        value: this.state.value,\n        onChange: this.onvalueChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"send\",\n        onClick: this.send.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"ERC20 tockens\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Add address of tockens:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"value\",\n        value: this.state.contrAddr,\n        onChange: this.onERC20Change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"add\",\n        onClick: this.interact_erc20.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Choose tocken: \", React.createElement(\"select\", {\n        onChange: this.changeTocken.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.tockens_to_display)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Balance: \", this.state.balanceTocken), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Send tockens\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" To Address:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"toAddr1\",\n        value: this.state.toAddr1,\n        onChange: this.ontoAddr1Change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" Value:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"value1\",\n        value: this.state.value1,\n        onChange: this.onvalue1Change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"send\",\n        onClick: this.sendTockens.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Multisig Wallet\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" Add wallet address:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"multiWalletAddr\",\n        value: this.state.multiWalletAddr,\n        onChange: this.onmultiWalletAddrChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"add Address\",\n        onClick: this.addAddressMulti.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" Set number of signers:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"signers\",\n        value: this.state.signers,\n        onChange: this.onsignersChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Current addresses:\"), this.state.MultiAddrToDisp, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create Multisig Wallet\",\n        onClick: this.createMultiWallet.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"onsignersChange\",\n    value: function onsignersChange(event) {\n      this.setState({\n        signers: event.target.value\n      });\n    }\n  }, {\n    key: \"onmultiWalletAddrChange\",\n    value: function onmultiWalletAddrChange(event) {\n      this.setState({\n        multiWalletAddr: event.target.value\n      });\n    }\n  }, {\n    key: \"addAddressMulti\",\n    value: function addAddressMulti(event) {\n      var adresses = [this.state.multiWalletAddr].concat(_toConsumableArray(this.state.adresses));\n      this.setState({\n        MultiAddrToDisp: adresses.map(function (number) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, number);\n        })\n      }); //var MultiAddrToDisp = [<p>{this.state.multiWalletAddr}</p>, ...this.state.MultiAddrToDisp]\n\n      this.setState({\n        adresses: adresses\n      }); //this.setState({MultiAddrToDisp: MultiAddrToDisp})\n\n      setTimeout(function () {}, 10);\n    }\n  }, {\n    key: \"createMultiWallet\",\n    value: function createMultiWallet(event) {\n      var _this2 = this;\n\n      try {\n        var web3 = this.state.web3;\n        var account1 = this.state.cur_user.address;\n        var privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex'); //this.state.cur_user.privateKey)\n\n        console.log('privkey1', privkey1);\n        var data = \"60806040523480156200001157600080fd5b50604051620024c8380380620024c883398101806040528101908080518201929190602001805190602001909291905050506000825182603282111580156200005a5750818111155b801562000068575060008114155b801562000076575060008214155b15156200008257600080fd5b600092505b8451831015620001bd57600260008685815181101515620000a457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015620001335750600085848151811015156200011057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b15156200013f57600080fd5b60016002600087868151811015156200015457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828060010193505062000087565b8460039080519060200190620001d5929190620001e8565b50836004819055505050505050620002bd565b82805482825590600052602060002090810192821562000264579160200282015b82811115620002635782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000209565b5b50905062000273919062000277565b5090565b620002ba91905b80821115620002b657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016200027e565b5090565b90565b6121fb80620002cd6000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c2714610177578063173825d9146101e457806320ea8d86146102275780632f54bf6e146102545780633411c81c146102af57806354741525146103145780637065cb4814610363578063784547a7146103a65780638b51d13f146103eb5780639ace38c21461042c578063a0e67e2b14610517578063a8abe69a14610583578063b5dc40c314610627578063b77bf600146106a9578063ba51a6df146106d4578063c01a8c8414610701578063c64274741461072e578063d74f8edd146107d5578063dc8452cd14610800578063e20056e61461082b578063ee22610b1461088e575b6000341115610175573373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a25b005b34801561018357600080fd5b506101a2600480360381019080803590602001909291905050506108bb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f057600080fd5b50610225600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108f9565b005b34801561023357600080fd5b5061025260048036038101908080359060200190929190505050610b92565b005b34801561026057600080fd5b50610295600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3a565b604051808215151515815260200191505060405180910390f35b3480156102bb57600080fd5b506102fa60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5a565b604051808215151515815260200191505060405180910390f35b34801561032057600080fd5b5061034d600480360381019080803515159060200190929190803515159060200190929190505050610d89565b6040518082815260200191505060405180910390f35b34801561036f57600080fd5b506103a4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1b565b005b3480156103b257600080fd5b506103d160048036038101908080359060200190929190505050611020565b604051808215151515815260200191505060405180910390f35b3480156103f757600080fd5b5061041660048036038101908080359060200190929190505050611105565b6040518082815260200191505060405180910390f35b34801561043857600080fd5b50610457600480360381019080803590602001909291905050506111d0565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b838110156104d95780820151818401526020810190506104be565b50505050905090810190601f1680156105065780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561052357600080fd5b5061052c6112c5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561056f578082015181840152602081019050610554565b505050509050019250505060405180910390f35b34801561058f57600080fd5b506105d06004803603810190808035906020019092919080359060200190929190803515159060200190929190803515159060200190929190505050611353565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106135780820151818401526020810190506105f8565b505050509050019250505060405180910390f35b34801561063357600080fd5b50610652600480360381019080803590602001909291905050506114c4565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561069557808201518184015260208101905061067a565b505050509050019250505060405180910390f35b3480156106b557600080fd5b506106be611701565b6040518082815260200191505060405180910390f35b3480156106e057600080fd5b506106ff60048036038101908080359060200190929190505050611707565b005b34801561070d57600080fd5b5061072c600480360381019080803590602001909291905050506117c1565b005b34801561073a57600080fd5b506107bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061199e565b6040518082815260200191505060405180910390f35b3480156107e157600080fd5b506107ea6119bd565b6040518082815260200191505060405180910390f35b34801561080c57600080fd5b506108156119c2565b6040518082815260200191505060405180910390f35b34801561083757600080fd5b5061088c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119c8565b005b34801561089a57600080fd5b506108b960048036038101908080359060200190929190505050611cdd565b005b6003818154811015156108ca57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093557600080fd5b81600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561098e57600080fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600091505b600160038054905003821015610b13578273ffffffffffffffffffffffffffffffffffffffff16600383815481101515610a2157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b06576003600160038054905003815481101515610a7f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600383815481101515610ab957fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b13565b81806001019250506109eb565b6001600381818054905003915081610b2b91906120fe565b506003805490506004541115610b4a57610b49600380549050611707565b5b8273ffffffffffffffffffffffffffffffffffffffff167f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9060405160405180910390a2505050565b33600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610beb57600080fd5b81336001600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610c5657600080fd5b8360008082815260200190815260200160002060030160009054906101000a900460ff16151515610c8657600080fd5b60006001600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550843373ffffffffffffffffffffffffffffffffffffffff167ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e960405160405180910390a35050505050565b60026020528060005260406000206000915054906101000a900460ff1681565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080600090505b600554811015610e1457838015610dc8575060008082815260200190815260200160002060030160009054906101000a900460ff16155b80610dfb5750828015610dfa575060008082815260200190815260200160002060030160009054906101000a900460ff165b5b15610e07576001820191505b8080600101915050610d91565b5092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e5557600080fd5b80600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610eaf57600080fd5b8160008173ffffffffffffffffffffffffffffffffffffffff1614151515610ed657600080fd5b60016003805490500160045460328211158015610ef35750818111155b8015610f00575060008114155b8015610f0d575060008214155b1515610f1857600080fd5b6001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060038590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508473ffffffffffffffffffffffffffffffffffffffff167ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d60405160405180910390a25050505050565b6000806000809150600090505b6003805490508110156110fd5760016000858152602001908152602001600020600060038381548110151561105e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156110dd576001820191505b6004548214156110f057600192506110fe565b808060010191505061102d565b5b5050919050565b600080600090505b6003805490508110156111ca5760016000848152602001908152602001600020600060038381548110151561113e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111bd576001820191505b808060010191505061110d565b50919050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112a85780601f1061127d576101008083540402835291602001916112a8565b820191906000526020600020905b81548152906001019060200180831161128b57829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6060600380548060200260200160405190810160405280929190818152602001828054801561134957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112ff575b5050505050905090565b60608060008060055460405190808252806020026020018201604052801561138a5781602001602082028038833980820191505090505b50925060009150600090505b600554811015611436578580156113cd575060008082815260200190815260200160002060030160009054906101000a900460ff16155b8061140057508480156113ff575060008082815260200190815260200160002060030160009054906101000a900460ff165b5b156114295780838381518110151561141457fe5b90602001906020020181815250506001820191505b8080600101915050611396565b8787036040519080825280602002602001820160405280156114675781602001602082028038833980820191505090505b5093508790505b868110156114b957828181518110151561148457fe5b906020019060200201518489830381518110151561149e57fe5b9060200190602002018181525050808060010191505061146e565b505050949350505050565b6060806000806003805490506040519080825280602002602001820160405280156114fe5781602001602082028038833980820191505090505b50925060009150600090505b60038054905081101561164b5760016000868152602001908152602001600020600060038381548110151561153b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561163e576003818154811015156115c257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811015156115fb57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001820191505b808060010191505061150a565b8160405190808252806020026020018201604052801561167a5781602001602082028038833980820191505090505b509350600090505b818110156116f957828181518110151561169857fe5b9060200190602002015184828151811015156116b057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050611682565b505050919050565b60055481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561174157600080fd5b60038054905081603282111580156117595750818111155b8015611766575060008114155b8015611773575060008214155b151561177e57600080fd5b826004819055507fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a836040518082815260200191505060405180910390a1505050565b33600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561181a57600080fd5b81600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561187657600080fd5b82336001600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156118e257600080fd5b600180600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550843373ffffffffffffffffffffffffffffffffffffffff167f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef60405160405180910390a361199785611cdd565b5050505050565b60006119ab848484611f85565b90506119b6816117c1565b9392505050565b603281565b60045481565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a0457600080fd5b82600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611a5d57600080fd5b82600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611ab757600080fd5b600092505b600380549050831015611ba0578473ffffffffffffffffffffffffffffffffffffffff16600384815481101515611aef57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b935783600384815481101515611b4657fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ba0565b8280600101935050611abc565b6000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508473ffffffffffffffffffffffffffffffffffffffff167f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9060405160405180910390a28373ffffffffffffffffffffffffffffffffffffffff167ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d60405160405180910390a25050505050565b600033600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611d3857600080fd5b82336001600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611da357600080fd5b8460008082815260200190815260200160002060030160009054906101000a900460ff16151515611dd357600080fd5b611ddc86611020565b15611f7d57600080878152602001908152602001600020945060018560030160006101000a81548160ff021916908315150217905550611efa8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866001015487600201805460018160011615610100020316600290049050886002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ef05780601f10611ec557610100808354040283529160200191611ef0565b820191906000526020600020905b815481529060010190602001808311611ed357829003601f168201915b50505050506120d7565b15611f3157857f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed7560405160405180910390a2611f7c565b857f526441bb6c1aba3c9a4a6ca1d6545da9c2333c8c48343ef398eb858d72b7923660405160405180910390a260008560030160006101000a81548160ff0219169083151502179055505b5b505050505050565b60008360008173ffffffffffffffffffffffffffffffffffffffff1614151515611fae57600080fd5b60055491506080604051908101604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581525060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061206d92919061212a565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506001600560008282540192505081905550817fc0ba8fe4b176c1714197d43b9cc6bcf797a4a7461c5fe8d0ef6e184ae7601e5160405160405180910390a2509392505050565b6000806040516020840160008287838a8c6187965a03f19250505080915050949350505050565b8154818355818111156121255781836000526020600020918201910161212491906121aa565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216b57805160ff1916838001178555612199565b82800160010185558215612199579182015b8281111561219857825182559160200191906001019061217d565b5b5090506121a691906121aa565b5090565b6121cc91905b808211156121c85760008160009055506001016121b0565b5090565b905600a165627a7a7230582068b695c7b57fd9843be9c9a12e71fce08a591fc93d713ef7aa32009a3282e85a0029\";\n        web3.eth.getTransactionCount(account1, function (err, txCount) {\n          //build the transaction\n          var txObject = {\n            nonce: web3.utils.toHex(txCount),\n            gasLimit: web3.utils.toHex(1000000000),\n            gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n            data: data,\n            arguments: [_this2.state.adresses, web3.utils.toHex(_this2.state.signers)]\n          };\n          console.log(\"txObject\", txObject); //sign the transaction\n\n          var tx = new Tx(txObject);\n          tx.sign(privkey1);\n          var serializedTx = tx.serialize();\n          var raw = '0x' + serializedTx.toString('hex'); //broadcast the transaction\n\n          web3.eth.sendSignedTransaction(raw, function (err, txHash) {\n            console.log('txHash:', txHash);\n          });\n        });\n        this.getBal(this.state.cur_user);\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n  }, {\n    key: \"createProposal\",\n    value: function createProposal(event) {}\n  }, {\n    key: \"signProposal\",\n    value: function signProposal(event) {}\n  }, {\n    key: \"rejectProposal\",\n    value: function rejectProposal(event) {}\n  }, {\n    key: \"changeTocken\",\n    value: function changeTocken(event) {\n      var _this3 = this;\n\n      var tocken = event.target.value;\n      var web3 = this.state.web3; //console.log(\"tocken\", tocken)\n      //const bal1 = this.state.cur_tocken.tocken.methods.balanceOf('0x04cEAb79390F3de7D12C01899E49459fbB86E546').call('0x04cEAb79390F3de7D12C01899E49459fbB86E546');\n      //console.log('bal1', bal1)\n\n      this.state.tockens.map(function (number) {\n        if (number.addr === tocken) {\n          console.log(number.addr, tocken);\n\n          _this3.setState({\n            cur_tocken: number\n          }); //if (this.state.cur_user != '') {\n\n\n          console.log(\"cur_user\", _this3.state.cur_user.address);\n          var bal;\n\n          try {\n            number.tocken.methods.balanceOf(_this3.state.cur_user.address, function (err, res) {\n              console.log('err:', err, 'res:', res);\n              bal = res;\n            });\n          } catch (e) {\n            console.log('error', e);\n          }\n\n          _this3.setState({\n            balanceTocken: bal\n          }); //console.log(\"bal:\", bal)\n          //}\n\n        }\n      });\n    }\n  }, {\n    key: \"onERC20Change\",\n    value: function onERC20Change(event) {\n      this.setState({\n        contrAddr: event.target.value\n      });\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(event) {\n      this.setState({\n        privkey: event.target.value\n      });\n    }\n  }, {\n    key: \"ontoAddrChange\",\n    value: function ontoAddrChange(event) {\n      this.setState({\n        toAddr: event.target.value\n      });\n    }\n  }, {\n    key: \"onvalueChange\",\n    value: function onvalueChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"ontoAddr1Change\",\n    value: function ontoAddr1Change(event) {\n      this.setState({\n        toAddr1: event.target.value\n      });\n    }\n  }, {\n    key: \"onvalue1Change\",\n    value: function onvalue1Change(event) {\n      this.setState({\n        value1: event.target.value\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(event) {\n      var _this4 = this;\n\n      try {\n        var web3 = this.state.web3;\n        var account1 = this.state.cur_user.address;\n        var account2 = this.state.toAddr;\n        var privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex'); //this.state.cur_user.privateKey)\n\n        console.log('privkey1', privkey1);\n        web3.eth.getTransactionCount(account1, function (err, txCount) {\n          //build the transaction\n          var txObject = {\n            nonce: web3.utils.toHex(txCount),\n            to: account2,\n            value: web3.utils.toHex(web3.utils.toWei(_this4.state.value, 'ether')),\n            gasLimit: web3.utils.toHex(21000),\n            gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')) //sign the transaction\n\n          };\n          var tx = new Tx(txObject);\n          tx.sign(privkey1);\n          var serializedTx = tx.serialize();\n          var raw = '0x' + serializedTx.toString('hex'); //broadcast the transaction\n\n          web3.eth.sendSignedTransaction(raw, function (err, txHash) {\n            console.log('txHash:', txHash);\n          });\n        });\n        this.getBal(this.state.cur_user);\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n  }, {\n    key: \"sendTockens\",\n    value: function sendTockens(event) {\n      var _this5 = this;\n\n      try {\n        var web3 = this.state.web3;\n        var account1 = this.state.cur_user.address;\n        var account2 = this.state.toAddr1;\n        var privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex'); //this.state.cur_user.privateKey)\n\n        console.log('privkey1', privkey1);\n        var data = this.state.cur_tocken.tocken.methods.transfer(account2, web3.utils.toHex(this.state.value1)).encodeABI();\n        web3.eth.getTransactionCount(account1, function (err, txCount) {\n          //build the transaction\n          var txObject = {\n            nonce: web3.utils.toHex(txCount),\n            gasLimit: web3.utils.toHex(800000),\n            gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n            to: _this5.state.cur_tocken.addr,\n            data: data\n          };\n          console.log(\"txObject\", txObject); //sign the transaction\n\n          var tx = new Tx(txObject);\n          tx.sign(privkey1);\n          var serializedTx = tx.serialize();\n          var raw = '0x' + serializedTx.toString('hex'); //broadcast the transaction\n\n          web3.eth.sendSignedTransaction(raw, function (err, txHash) {\n            console.log('txHash:', txHash);\n          });\n        });\n        this.getBal(this.state.cur_user);\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n  }, {\n    key: \"importKey\",\n    value: function importKey(event) {\n      console.log('privkey', this.state.privkey);\n      var account;\n\n      try {\n        account = this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n        console.log('account', account);\n        var users = [account].concat(_toConsumableArray(this.state.users));\n        this.setState({\n          users: users\n        });\n        var accounts = [React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, account.address)].concat(_toConsumableArray(this.state.accounts));\n        this.setState({\n          accounts: accounts\n        });\n        this.setState({\n          cur_user: account\n        });\n        this.getBal(account);\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n  }, {\n    key: \"getBal\",\n    value: function getBal(account) {\n      var _this6 = this;\n\n      var web3 = this.state.web3;\n      var bal;\n      web3.eth.getBalance(account.address, function (err, wei) {\n        bal = web3.utils.fromWei(wei, 'ether');\n\n        _this6.setState({\n          balance: bal\n        });\n\n        console.log('balance:', bal);\n        console.log(\"1\", _this6.state.cur_user.privateKey);\n        setTimeout(function () {}, 10);\n\n        var Wallet = require('ethereumjs-wallet');\n\n        var EthUtil = require('ethereumjs-util'); // Get a wallet instance from a private key\n\n\n        console.log(\"2\", _this6.state.cur_user.privateKey);\n        var privateKeyBuffer = Buffer.from(_this6.state.cur_user.privateKey.replace('0x', ''), 'hex');\n        console.log(privateKeyBuffer);\n        var wallet = Wallet.fromPrivateKey(privateKeyBuffer); // Get a public key\n\n        var publicKey = wallet.getPublicKeyString();\n        console.log(publicKey);\n\n        _this6.setState({\n          pubkey: publicKey\n        });\n      });\n    }\n  }, {\n    key: \"checkNetwork\",\n    value: function checkNetwork(event) {\n      //this.state = { accounts: '' , networks: ''}\n      console.log(this.data);\n    }\n  }, {\n    key: \"changeAddr\",\n    value: function changeAddr(event) {\n      var _this7 = this;\n\n      var Addr = event.target.value; //console.log(this.state.web3)\n\n      var web3 = this.state.web3;\n      console.log(\"Addr\", Addr);\n      var bal;\n      web3.eth.getBalance(Addr, function (err, wei) {\n        bal = web3.utils.fromWei(wei, 'ether');\n\n        _this7.setState({\n          balance: bal\n        });\n      });\n      var accounts = this.state.users;\n      var us;\n      accounts.map(function (number) {\n        if (number.address === Addr) {\n          us = number;\n\n          _this7.setState({\n            cur_user: number\n          });\n        }\n      });\n      setTimeout(function () {\n        console.log(\"cur_user:\", _this7.state.cur_user);\n      }, 10);\n      this.getBal(us); //console.log(\"us:\", us)\n    }\n  }, {\n    key: \"newAddr\",\n    value: function newAddr(event) {\n      //console.log(event.target.value)\n      //const accounts = this.state.accounts\n      var web3 = this.state.web3;\n      var account = web3.eth.accounts.create(); //accounts.append(account)\n\n      console.log(account);\n      var users = [account].concat(_toConsumableArray(this.state.users));\n      var accounts = [React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, account.address)].concat(_toConsumableArray(this.state.accounts)); //users.map((user) => {accounts = [<option>{user.address}</option>, ...this.state.accounts]})\n\n      this.setState({\n        users: users\n      });\n      this.setState({\n        cur_user: account\n      });\n      this.setState({\n        accounts: accounts\n      });\n      setTimeout(function () {}, 10);\n      this.getBal(account);\n      console.log('accounts', this.state.accounts);\n      console.log('users', this.state.users);\n    }\n  }, {\n    key: \"getBalTocken\",\n    value: function () {\n      var _getBalTocken = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(tocken) {\n        var bal;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.state.cur_user !== '')) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 3;\n                return tocken.tocken.methods.balanceOf(this.state.cur_user.address).call();\n\n              case 3:\n                bal = _context2.sent;\n                this.setState({\n                  balanceTocken: bal\n                });\n                console.log(bal);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getBalTocken(_x2) {\n        return _getBalTocken.apply(this, arguments);\n      }\n\n      return getBalTocken;\n    }()\n  }, {\n    key: \"interact_erc20\",\n    value: function () {\n      var _interact_erc = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(event) {\n        var abi, addr, tocken, name, tockens, cur_tocken, tockens_to_display;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                abi = require('human-standard-token-abi');\n                addr = this.state.contrAddr; //var MyContract = this.state.web3.eth.contract(abi);\n\n                if (!(addr != '')) {\n                  _context3.next = 23;\n                  break;\n                }\n\n                _context3.prev = 3;\n                tocken = new this.state.web3.eth.Contract(abi, addr); //this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n\n                _context3.next = 7;\n                return tocken.methods.name().call();\n\n              case 7:\n                name = _context3.sent;\n                console.log('name', name);\n                console.log('web3:', this.state.web3);\n                tockens = [{\n                  name: name,\n                  addr: addr,\n                  tocken: tocken\n                }].concat(_toConsumableArray(this.state.tockens));\n                cur_tocken = {\n                  name: name,\n                  addr: addr,\n                  tocken: tocken\n                };\n                tockens_to_display = tockens.map(function (number) {\n                  return React.createElement(\"option\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 444\n                    },\n                    __self: this\n                  }, number.name);\n                });\n                this.setState({\n                  tockens: tockens\n                });\n                this.setState({\n                  cur_tocken: cur_tocken\n                });\n                this.setState({\n                  tockens_to_display: tockens_to_display\n                });\n                this.getBalTocken(cur_tocken);\n                setTimeout(function () {}, 10);\n                _context3.next = 23;\n                break;\n\n              case 20:\n                _context3.prev = 20;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log('error', _context3.t0);\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 20]]);\n      }));\n\n      function interact_erc20(_x3) {\n        return _interact_erc.apply(this, arguments);\n      }\n\n      return interact_erc20;\n    }()\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/eth_wallet/src/App.js"],"names":["React","Component","Web3","Tx","secp256k1","PassThrough","App","ProjectId","networks","setState","map","number","loadBlockchainData","event","url","target","value","web3","props","state","accounts","balance","users","privkey","cur_user","toAddr","toAddr1","value1","contrAddr","tockens","cur_tocken","tockens_to_display","balanceTocken","pubkey","multiWalletAddr","adresses","MultiAddrToDisp","signers","bind","changeAddr","newAddr","onPasswordChange","importKey","ontoAddrChange","onvalueChange","send","onERC20Change","interact_erc20","changeTocken","ontoAddr1Change","onvalue1Change","sendTockens","onmultiWalletAddrChange","addAddressMulti","onsignersChange","createMultiWallet","setTimeout","account1","address","privkey1","Buffer","from","privateKey","replace","console","log","data","eth","getTransactionCount","err","txCount","txObject","nonce","utils","toHex","gasLimit","gasPrice","toWei","arguments","tx","sign","serializedTx","serialize","raw","toString","sendSignedTransaction","txHash","getBal","e","tocken","addr","bal","methods","balanceOf","res","account2","to","transfer","encodeABI","account","privateKeyToAccount","getBalance","wei","fromWei","Wallet","require","EthUtil","privateKeyBuffer","wallet","fromPrivateKey","publicKey","getPublicKeyString","Addr","us","create","call","abi","Contract","name","getBalTocken"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3'\nimport Tx from 'ethereumjs-tx'\nimport secp256k1 from 'secp256k1'\nimport { PassThrough } from 'stream';\n\n\nclass App extends Component {\n  // data = '';\n  \n\n  componentWillMount() {\n    const ProjectId = '723c0eab8d2e4f30a10fc4a2ce2a08f9'\n    //\"https://mainnet.infura.io/v3/723c0eab8d2e4f30a10fc4a2ce2a08f9\"\n    const networks = [\n      'http://localhost:7545',\n      'https://mainnet.infura.io/v3/'+ProjectId,\n      'https://ropsten.infura.io/v3/'+ProjectId,\n      'https://rinkeby.infura.io/v3/'+ProjectId,\n      'https://kovan.infura.io/v3/'+ProjectId,\n      'https://goerli.infura.io/v3/'+ProjectId\n    ]\n    this.setState({networks: networks.map((number) =>\n      <option>{number}</option>)})\n    this.loadBlockchainData(null)\n  }\n\n  async loadBlockchainData(event) {\n    let url;\n    if (!event) {\n       url = 'http://localhost:7545'\n    }\n    else {\n       url = event.target.value\n    }\n\n    const web3 = new Web3(url)\n    this.setState({web3})\n    //setTimeout(()=>{this.setState({web3})},0\n    //const accounts = this.state.users\n    //console.log('accounts', accounts)\n    //this.setState({accounts: accounts})\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      accounts: '' ,\n      networks: '',\n      balance: '', \n      web3: Web3, \n      users: [], \n      privkey: '',\n      cur_user: '',\n      toAddr: '',\n      value: '',\n      toAddr1: '',\n      value1: '',\n      contrAddr: '',\n      tockens: '',\n      cur_tocken: '',\n      tockens_to_display: '',\n      balanceTocken: '',\n      pubkey: '',\n      multiWalletAddr: '',\n      adresses: [],\n      MultiAddrToDisp: '',\n      signers: '1'\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>BEST WALLET</h1>\n        <p>Choose network:  <select onChange={this.loadBlockchainData.bind(this)}>{this.state.networks}</select></p>\n        <p>Choose Account: <select onChange={this.changeAddr.bind(this)}>{this.state.accounts}</select></p>\n        <p>PublikKey: {this.state.pubkey}</p>\n        <p>Balance: {this.state.balance}</p>\n        <input type=\"submit\" value='Create new address' onClick={this.newAddr.bind(this)} />\n          <p><label> Private key (0x...):<input type=\"password\" name=\"privkey\" value={this.state.privkey}\n                            onChange={this.onPasswordChange.bind(this)}/></label><input type=\"submit\" value=\"Import\" onClick={this.importKey.bind(this)}/></p>\n        <h3>Send money</h3>\n        <p><label> To Address:<input type=\"text\" name=\"toAddr\" value={this.state.toAddr}\n                            onChange={this.ontoAddrChange.bind(this)}/></label></p>\n        <p><label> Value in eth:<input type=\"text\" name=\"value\" value={this.state.value}\n                            onChange={this.onvalueChange.bind(this)}/></label></p>\n        <p><input type=\"submit\" value=\"send\" onClick={this.send.bind(this)}/></p>\n        <h3>ERC20 tockens</h3>\n        <p><label>Add address of tockens:<input type=\"text\" name=\"value\" value={this.state.contrAddr}\n                onChange={this.onERC20Change.bind(this)}/></label>\n                <input type=\"submit\" value=\"add\" onClick={this.interact_erc20.bind(this)}/></p>\n        <p>Choose tocken: <select onChange={this.changeTocken.bind(this)}>{this.state.tockens_to_display}</select></p>\n        <p>Balance: {this.state.balanceTocken}</p>\n\n        <h3>Send tockens</h3>\n        <p><label> To Address:<input type=\"text\" name=\"toAddr1\" value={this.state.toAddr1}\n                            onChange={this.ontoAddr1Change.bind(this)}/></label></p>\n        <p><label> Value:<input type=\"text\" name=\"value1\" value={this.state.value1}\n                            onChange={this.onvalue1Change.bind(this)}/></label></p>\n        <p><input type=\"submit\" value=\"send\" onClick={this.sendTockens.bind(this)}/></p>\n        <h3>Multisig Wallet</h3>\n        <p><label> Add wallet address:<input type=\"text\" name=\"multiWalletAddr\" value={this.state.multiWalletAddr}\n                            onChange={this.onmultiWalletAddrChange.bind(this)}/></label>\n                            <input type=\"submit\" value=\"add Address\" onClick={this.addAddressMulti.bind(this)}/></p>\n\n        <p><label> Set number of signers:<input type=\"text\" name=\"signers\" value={this.state.signers}\n        onChange={this.onsignersChange.bind(this)}/></label></p>\n        <p>Current addresses:</p>{this.state.MultiAddrToDisp}\n\n        <p><input type=\"submit\" value=\"Create Multisig Wallet\" onClick={this.createMultiWallet.bind(this)}/></p>\n        \n      </div>\n\n\n    );\n  }\nonsignersChange(event) {\n  this.setState({signers: event.target.value});\n}\n\n  onmultiWalletAddrChange(event) {\n    this.setState({multiWalletAddr: event.target.value});\n  }\n\n  addAddressMulti(event) {\n    var adresses = [this.state.multiWalletAddr, ...this.state.adresses]\n    this.setState({MultiAddrToDisp: adresses.map((number) =>\n      <li>{number}</li>)})\n    //var MultiAddrToDisp = [<p>{this.state.multiWalletAddr}</p>, ...this.state.MultiAddrToDisp]\n    this.setState({adresses: adresses})\n    //this.setState({MultiAddrToDisp: MultiAddrToDisp})\n    setTimeout(() => {}, 10)\n  }\n\n  createMultiWallet(event) {\n    try {\n      const web3 = this.state.web3\n      const account1 = this.state.cur_user.address\n      const privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex')//this.state.cur_user.privateKey)\n      console.log('privkey1', privkey1)\n      const data = \"60806040523480156200001157600080fd5b50604051620024c8380380620024c883398101806040528101908080518201929190602001805190602001909291905050506000825182603282111580156200005a5750818111155b801562000068575060008114155b801562000076575060008214155b15156200008257600080fd5b600092505b8451831015620001bd57600260008685815181101515620000a457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015620001335750600085848151811015156200011057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1614155b15156200013f57600080fd5b60016002600087868151811015156200015457fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828060010193505062000087565b8460039080519060200190620001d5929190620001e8565b50836004819055505050505050620002bd565b82805482825590600052602060002090810192821562000264579160200282015b82811115620002635782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000209565b5b50905062000273919062000277565b5090565b620002ba91905b80821115620002b657600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016200027e565b5090565b90565b6121fb80620002cd6000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c2714610177578063173825d9146101e457806320ea8d86146102275780632f54bf6e146102545780633411c81c146102af57806354741525146103145780637065cb4814610363578063784547a7146103a65780638b51d13f146103eb5780639ace38c21461042c578063a0e67e2b14610517578063a8abe69a14610583578063b5dc40c314610627578063b77bf600146106a9578063ba51a6df146106d4578063c01a8c8414610701578063c64274741461072e578063d74f8edd146107d5578063dc8452cd14610800578063e20056e61461082b578063ee22610b1461088e575b6000341115610175573373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a25b005b34801561018357600080fd5b506101a2600480360381019080803590602001909291905050506108bb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101f057600080fd5b50610225600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108f9565b005b34801561023357600080fd5b5061025260048036038101908080359060200190929190505050610b92565b005b34801561026057600080fd5b50610295600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d3a565b604051808215151515815260200191505060405180910390f35b3480156102bb57600080fd5b506102fa60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d5a565b604051808215151515815260200191505060405180910390f35b34801561032057600080fd5b5061034d600480360381019080803515159060200190929190803515159060200190929190505050610d89565b6040518082815260200191505060405180910390f35b34801561036f57600080fd5b506103a4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1b565b005b3480156103b257600080fd5b506103d160048036038101908080359060200190929190505050611020565b604051808215151515815260200191505060405180910390f35b3480156103f757600080fd5b5061041660048036038101908080359060200190929190505050611105565b6040518082815260200191505060405180910390f35b34801561043857600080fd5b50610457600480360381019080803590602001909291905050506111d0565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018060200183151515158152602001828103825284818151815260200191508051906020019080838360005b838110156104d95780820151818401526020810190506104be565b50505050905090810190601f1680156105065780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561052357600080fd5b5061052c6112c5565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561056f578082015181840152602081019050610554565b505050509050019250505060405180910390f35b34801561058f57600080fd5b506105d06004803603810190808035906020019092919080359060200190929190803515159060200190929190803515159060200190929190505050611353565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106135780820151818401526020810190506105f8565b505050509050019250505060405180910390f35b34801561063357600080fd5b50610652600480360381019080803590602001909291905050506114c4565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561069557808201518184015260208101905061067a565b505050509050019250505060405180910390f35b3480156106b557600080fd5b506106be611701565b6040518082815260200191505060405180910390f35b3480156106e057600080fd5b506106ff60048036038101908080359060200190929190505050611707565b005b34801561070d57600080fd5b5061072c600480360381019080803590602001909291905050506117c1565b005b34801561073a57600080fd5b506107bf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061199e565b6040518082815260200191505060405180910390f35b3480156107e157600080fd5b506107ea6119bd565b6040518082815260200191505060405180910390f35b34801561080c57600080fd5b506108156119c2565b6040518082815260200191505060405180910390f35b34801561083757600080fd5b5061088c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119c8565b005b34801561089a57600080fd5b506108b960048036038101908080359060200190929190505050611cdd565b005b6003818154811015156108ca57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093557600080fd5b81600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561098e57600080fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600091505b600160038054905003821015610b13578273ffffffffffffffffffffffffffffffffffffffff16600383815481101515610a2157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b06576003600160038054905003815481101515610a7f57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600383815481101515610ab957fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b13565b81806001019250506109eb565b6001600381818054905003915081610b2b91906120fe565b506003805490506004541115610b4a57610b49600380549050611707565b5b8273ffffffffffffffffffffffffffffffffffffffff167f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9060405160405180910390a2505050565b33600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610beb57600080fd5b81336001600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610c5657600080fd5b8360008082815260200190815260200160002060030160009054906101000a900460ff16151515610c8657600080fd5b60006001600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550843373ffffffffffffffffffffffffffffffffffffffff167ff6a317157440607f36269043eb55f1287a5a19ba2216afeab88cd46cbcfb88e960405160405180910390a35050505050565b60026020528060005260406000206000915054906101000a900460ff1681565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080600090505b600554811015610e1457838015610dc8575060008082815260200190815260200160002060030160009054906101000a900460ff16155b80610dfb5750828015610dfa575060008082815260200190815260200160002060030160009054906101000a900460ff165b5b15610e07576001820191505b8080600101915050610d91565b5092915050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e5557600080fd5b80600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610eaf57600080fd5b8160008173ffffffffffffffffffffffffffffffffffffffff1614151515610ed657600080fd5b60016003805490500160045460328211158015610ef35750818111155b8015610f00575060008114155b8015610f0d575060008214155b1515610f1857600080fd5b6001600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060038590806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508473ffffffffffffffffffffffffffffffffffffffff167ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d60405160405180910390a25050505050565b6000806000809150600090505b6003805490508110156110fd5760016000858152602001908152602001600020600060038381548110151561105e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156110dd576001820191505b6004548214156110f057600192506110fe565b808060010191505061102d565b5b5050919050565b600080600090505b6003805490508110156111ca5760016000848152602001908152602001600020600060038381548110151561113e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111bd576001820191505b808060010191505061110d565b50919050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112a85780601f1061127d576101008083540402835291602001916112a8565b820191906000526020600020905b81548152906001019060200180831161128b57829003601f168201915b5050505050908060030160009054906101000a900460ff16905084565b6060600380548060200260200160405190810160405280929190818152602001828054801561134957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112ff575b5050505050905090565b60608060008060055460405190808252806020026020018201604052801561138a5781602001602082028038833980820191505090505b50925060009150600090505b600554811015611436578580156113cd575060008082815260200190815260200160002060030160009054906101000a900460ff16155b8061140057508480156113ff575060008082815260200190815260200160002060030160009054906101000a900460ff165b5b156114295780838381518110151561141457fe5b90602001906020020181815250506001820191505b8080600101915050611396565b8787036040519080825280602002602001820160405280156114675781602001602082028038833980820191505090505b5093508790505b868110156114b957828181518110151561148457fe5b906020019060200201518489830381518110151561149e57fe5b9060200190602002018181525050808060010191505061146e565b505050949350505050565b6060806000806003805490506040519080825280602002602001820160405280156114fe5781602001602082028038833980820191505090505b50925060009150600090505b60038054905081101561164b5760016000868152602001908152602001600020600060038381548110151561153b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561163e576003818154811015156115c257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811015156115fb57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001820191505b808060010191505061150a565b8160405190808252806020026020018201604052801561167a5781602001602082028038833980820191505090505b509350600090505b818110156116f957828181518110151561169857fe5b9060200190602002015184828151811015156116b057fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050611682565b505050919050565b60055481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561174157600080fd5b60038054905081603282111580156117595750818111155b8015611766575060008114155b8015611773575060008214155b151561177e57600080fd5b826004819055507fa3f1ee9126a074d9326c682f561767f710e927faa811f7a99829d49dc421797a836040518082815260200191505060405180910390a1505050565b33600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561181a57600080fd5b81600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561187657600080fd5b82336001600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515156118e257600080fd5b600180600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550843373ffffffffffffffffffffffffffffffffffffffff167f4a504a94899432a9846e1aa406dceb1bcfd538bb839071d49d1e5e23f5be30ef60405160405180910390a361199785611cdd565b5050505050565b60006119ab848484611f85565b90506119b6816117c1565b9392505050565b603281565b60045481565b60003073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a0457600080fd5b82600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611a5d57600080fd5b82600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611ab757600080fd5b600092505b600380549050831015611ba0578473ffffffffffffffffffffffffffffffffffffffff16600384815481101515611aef57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b935783600384815481101515611b4657fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ba0565b8280600101935050611abc565b6000600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508473ffffffffffffffffffffffffffffffffffffffff167f8001553a916ef2f495d26a907cc54d96ed840d7bda71e73194bf5a9df7a76b9060405160405180910390a28373ffffffffffffffffffffffffffffffffffffffff167ff39e6e1eb0edcf53c221607b54b00cd28f3196fed0a24994dc308b8f611b682d60405160405180910390a25050505050565b600033600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611d3857600080fd5b82336001600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611da357600080fd5b8460008082815260200190815260200160002060030160009054906101000a900460ff16151515611dd357600080fd5b611ddc86611020565b15611f7d57600080878152602001908152602001600020945060018560030160006101000a81548160ff021916908315150217905550611efa8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866001015487600201805460018160011615610100020316600290049050886002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ef05780601f10611ec557610100808354040283529160200191611ef0565b820191906000526020600020905b815481529060010190602001808311611ed357829003601f168201915b50505050506120d7565b15611f3157857f33e13ecb54c3076d8e8bb8c2881800a4d972b792045ffae98fdf46df365fed7560405160405180910390a2611f7c565b857f526441bb6c1aba3c9a4a6ca1d6545da9c2333c8c48343ef398eb858d72b7923660405160405180910390a260008560030160006101000a81548160ff0219169083151502179055505b5b505050505050565b60008360008173ffffffffffffffffffffffffffffffffffffffff1614151515611fae57600080fd5b60055491506080604051908101604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581525060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061206d92919061212a565b5060608201518160030160006101000a81548160ff0219169083151502179055509050506001600560008282540192505081905550817fc0ba8fe4b176c1714197d43b9cc6bcf797a4a7461c5fe8d0ef6e184ae7601e5160405160405180910390a2509392505050565b6000806040516020840160008287838a8c6187965a03f19250505080915050949350505050565b8154818355818111156121255781836000526020600020918201910161212491906121aa565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061216b57805160ff1916838001178555612199565b82800160010185558215612199579182015b8281111561219857825182559160200191906001019061217d565b5b5090506121a691906121aa565b5090565b6121cc91905b808211156121c85760008160009055506001016121b0565b5090565b905600a165627a7a7230582068b695c7b57fd9843be9c9a12e71fce08a591fc93d713ef7aa32009a3282e85a0029\";\n\n\n\n      web3.eth.getTransactionCount(account1, (err, txCount) => {\n      \n        //build the transaction\n        const txObject = {\n          nonce: web3.utils.toHex(txCount),\n          gasLimit: web3.utils.toHex(1000000000),\n          gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n          data: data,\n          arguments: [this.state.adresses, web3.utils.toHex(this.state.signers)]\n        }\n        console.log(\"txObject\", txObject)\n        //sign the transaction\n        const tx = new Tx(txObject);\n        tx.sign(privkey1);\n        const serializedTx = tx.serialize();\n        const raw = '0x' + serializedTx.toString('hex')\n\n        //broadcast the transaction\n        web3.eth.sendSignedTransaction(raw, (err, txHash) => {\n          console.log('txHash:', txHash)\n        })\n      });\n\n      this.getBal(this.state.cur_user)\n      }\n    catch(e)  {\n      console.log('error', e);\n    }\n  }\n\n  createProposal(event) {\n\n  }\n\n  signProposal(event) {\n\n  }\n\n  rejectProposal(event) {\n\n  }\n\n\n\n  changeTocken(event) {\n    const tocken = event.target.value;\n    const web3 = this.state.web3\n    //console.log(\"tocken\", tocken)\n    //const bal1 = this.state.cur_tocken.tocken.methods.balanceOf('0x04cEAb79390F3de7D12C01899E49459fbB86E546').call('0x04cEAb79390F3de7D12C01899E49459fbB86E546');\n    //console.log('bal1', bal1)\n    this.state.tockens.map((number) => {\n      if (number.addr === tocken) {\n        console.log(number.addr, tocken)\n        this.setState({cur_tocken: number})\n        //if (this.state.cur_user != '') {\n          console.log(\"cur_user\", this.state.cur_user.address)\n          let bal;\n          try {\n            number.tocken.methods.balanceOf(this.state.cur_user.address, (err, res) => {\n              console.log('err:', err, 'res:', res)\n              bal = res;\n            })\n          }\n          catch(e)  {\n            console.log('error', e);\n          }\n          \n          this.setState({balanceTocken: bal})\n          //console.log(\"bal:\", bal)\n        //}\n      }\n    })\n  }\n\n  onERC20Change(event) {\n    this.setState({contrAddr: event.target.value});\n  }\n\n  onPasswordChange(event){\n    this.setState({privkey: event.target.value});\n  }\n\n  ontoAddrChange(event) {\n    this.setState({toAddr: event.target.value})\n  }\n\n  onvalueChange(event) {\n    this.setState({value: event.target.value})\n  }\n\n  ontoAddr1Change(event) {\n    this.setState({toAddr1: event.target.value})\n  }\n\n  onvalue1Change(event) {\n    this.setState({value1: event.target.value})\n  }\n\n  send(event) {\n    try {\n      const web3 = this.state.web3\n      const account1 = this.state.cur_user.address\n      const account2 = this.state.toAddr\n      const privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex')//this.state.cur_user.privateKey)\n      console.log('privkey1', privkey1)\n\n\n      web3.eth.getTransactionCount(account1, (err, txCount) => {\n\n        //build the transaction\n        const txObject = {\n          nonce: web3.utils.toHex(txCount),\n          to: account2,\n          value: web3.utils.toHex(web3.utils.toWei(this.state.value, 'ether')),\n          gasLimit: web3.utils.toHex(21000),\n          gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei'))\n        }\n\n        //sign the transaction\n        const tx = new Tx(txObject);\n        tx.sign(privkey1);\n        const serializedTx = tx.serialize();\n        const raw = '0x' + serializedTx.toString('hex')\n\n        //broadcast the transaction\n        web3.eth.sendSignedTransaction(raw, (err, txHash) => {\n          console.log('txHash:', txHash)\n        })\n      });\n\n      this.getBal(this.state.cur_user)\n      }\n    catch(e)  {\n      console.log('error', e);\n    }\n  }\n\n  sendTockens(event) {\n    try {\n      const web3 = this.state.web3\n      const account1 = this.state.cur_user.address\n      const account2 = this.state.toAddr1\n      const privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex')//this.state.cur_user.privateKey)\n      console.log('privkey1', privkey1)\n      const data = this.state.cur_tocken.tocken.methods.transfer(account2, web3.utils.toHex(this.state.value1)).encodeABI()\n\n      web3.eth.getTransactionCount(account1, (err, txCount) => {\n      \n        //build the transaction\n        const txObject = {\n          nonce: web3.utils.toHex(txCount),\n          gasLimit: web3.utils.toHex(800000),\n          gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')),\n          to: this.state.cur_tocken.addr,\n          data: data\n        }\n        console.log(\"txObject\", txObject)\n        //sign the transaction\n        const tx = new Tx(txObject);\n        tx.sign(privkey1);\n        const serializedTx = tx.serialize();\n        const raw = '0x' + serializedTx.toString('hex')\n\n        //broadcast the transaction\n        web3.eth.sendSignedTransaction(raw, (err, txHash) => {\n          console.log('txHash:', txHash)\n        })\n      });\n\n      this.getBal(this.state.cur_user)\n      }\n    catch(e)  {\n      console.log('error', e);\n    }\n\n  }\n\n  importKey(event) {\n    console.log('privkey',this.state.privkey)\n    let account;\n    try {\n      account = this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n      console.log('account', account);\n      var users = [account, ...this.state.users]\n      this.setState({users: users})\n      var accounts = [<option>{account.address}</option>, ...this.state.accounts]\n      this.setState({accounts: accounts})\n      this.setState({cur_user: account})\n      this.getBal(account)\n    }\n    catch(e)  {\n      console.log('error', e);\n    }\n    \n  }\n\n  getBal(account) {\n    const web3 = this.state.web3\n    let bal;\n    web3.eth.getBalance(account.address, (err, wei) => {\n      bal = web3.utils.fromWei(wei, 'ether');\n      this.setState({balance: bal})\n\n      \n      \n      console.log('balance:', bal)\n      console.log(\"1\", this.state.cur_user.privateKey);\n      setTimeout(() => {}, 10)\n      var Wallet = require('ethereumjs-wallet');\n      var EthUtil = require('ethereumjs-util');\n\n      // Get a wallet instance from a private key\n      console.log(\"2\", this.state.cur_user.privateKey)\n      const privateKeyBuffer = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex');\n      console.log(privateKeyBuffer)\n      const wallet = Wallet.fromPrivateKey(privateKeyBuffer);\n\n      // Get a public key\n      const publicKey = wallet.getPublicKeyString();\n      console.log(publicKey);\n      this.setState({pubkey: publicKey})\n    })\n    \n  }\n\n   checkNetwork(event){\n     //this.state = { accounts: '' , networks: ''}\n     console.log(this.data)\n   }\n  \n   changeAddr(event) {\n    const Addr = event.target.value\n    //console.log(this.state.web3)\n    const web3 = this.state.web3\n    console.log(\"Addr\", Addr) \n    let bal;\n    web3.eth.getBalance(Addr, (err, wei) => {\n      bal = web3.utils.fromWei(wei, 'ether');\n      this.setState({balance: bal})\n    })\n    var accounts = this.state.users\n    let us\n    accounts.map((number) => {\n      \n      if (number.address === Addr) {\n        us = number\n        this.setState({cur_user: number})\n      }\n    })\n    setTimeout(()=>{console.log(\"cur_user:\", this.state.cur_user)},10)\n    this.getBal(us)\n    //console.log(\"us:\", us)\n   }\n\n   newAddr(event) {\n    //console.log(event.target.value)\n    //const accounts = this.state.accounts\n    const web3 = this.state.web3\n    var account = web3.eth.accounts.create()\n    //accounts.append(account)\n    console.log(account)\n    var users = [account, ...this.state.users]\n    var accounts = [<option>{account.address}</option>, ...this.state.accounts]\n    //users.map((user) => {accounts = [<option>{user.address}</option>, ...this.state.accounts]})\n    this.setState({users: users})\n    this.setState({cur_user: account})\n    this.setState({accounts: accounts})\n    setTimeout(() => {}, 10)\n    this.getBal(account)\n    console.log('accounts', this.state.accounts)\n    console.log('users', this.state.users)\n   }\n\n   async getBalTocken(tocken) {\n     if (this.state.cur_user !== '') {\n      const bal = await tocken.tocken.methods.balanceOf(this.state.cur_user.address).call()\n      this.setState({balanceTocken: bal})\n      console.log(bal)\n     }\n     \n   }\n\n   async interact_erc20(event) {\n    let abi = require('human-standard-token-abi');\n    const addr = this.state.contrAddr\n    //var MyContract = this.state.web3.eth.contract(abi);\n    if (addr != '') {\n      //var myContractInstance = MyContract .at(addr);\n      //var owner = myContractInstance .owner.call();\n      //console.log(\"owner: \", owner)\n      try {\n        const tocken = new this.state.web3.eth.Contract(abi, addr)//this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n        const name = await tocken.methods.name().call()\n        console.log('name', name);\n        console.log('web3:', this.state.web3)\n        var tockens = [{name: name, addr: addr, tocken: tocken}, ...this.state.tockens]\n        var cur_tocken = {name: name, addr: addr, tocken: tocken}\n        var tockens_to_display = tockens.map((number) => <option>{number.name}</option>)\n        this.setState({tockens: tockens})\n        this.setState({cur_tocken: cur_tocken})\n        this.setState({tockens_to_display: tockens_to_display})\n        this.getBalTocken(cur_tocken);\n        setTimeout(()=>{},10)\n      }\n      catch(e)  {\n        console.log('error', e);\n      }\n    }\n  \n   }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}