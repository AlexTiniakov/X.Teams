{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/mac/eth_wallet/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/eth_wallet/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport Tx from 'ethereumjs-tx';\nimport secp256k1 from 'secp256k1';\nimport { PassThrough } from 'stream';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    // data = '';\n    value: function componentWillMount() {\n      var ProjectId = '723c0eab8d2e4f30a10fc4a2ce2a08f9';\n      var networks = ['http://localhost:7545', 'https://mainnet.infura.io/v3/' + ProjectId, 'https://ropsten.infura.io/v3/' + ProjectId, 'https://rinkeby.infura.io/v3/' + ProjectId, 'https://kovan.infura.io/v3/' + ProjectId, 'https://goerli.infura.io/v3/' + ProjectId];\n      this.setState({\n        networks: networks.map(function (number) {\n          return React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, number);\n        })\n      });\n      this.loadBlockchainData(null);\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var url, web3;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!event) {\n                  url = 'http://localhost:7545';\n                } else {\n                  url = event.target.value;\n                }\n\n                web3 = new Web3(url);\n                this.setState({\n                  web3: web3\n                }); //setTimeout(()=>{this.setState({web3})},0\n                //const accounts = this.state.users\n                //console.log('accounts', accounts)\n                //this.setState({accounts: accounts})\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      accounts: '',\n      networks: '',\n      balance: '',\n      web3: Web3,\n      users: [],\n      privkey: '',\n      cur_user: '',\n      toAddr: '',\n      value: '',\n      contrAddr: '',\n      tockens: '',\n      cur_tocken: '',\n      tockens_to_display: '',\n      balanceTocken: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"BEST WALLET\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Choose network:  \", React.createElement(\"select\", {\n        onChange: this.loadBlockchainData.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.networks)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Choose Account: \", React.createElement(\"select\", {\n        onChange: this.changeAddr.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.accounts)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Balance: \", this.state.balance), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Create new address\",\n        onClick: this.newAddr.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Private key (0x...):\", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"privkey\",\n        value: this.state.privkey,\n        onChange: this.onPasswordChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Import\",\n        onClick: this.importKey.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Send money\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" To Address:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"toAddr\",\n        value: this.state.toAddr,\n        onChange: this.ontoAddrChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" Value in eth:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"value\",\n        value: this.state.value,\n        onChange: this.onvalueChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"send\",\n        onClick: this.send.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"ERC20 tockens\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add address of tockens:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"value\",\n        value: this.state.contrAddr,\n        onChange: this.onERC20Change.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"add\",\n        onClick: this.interact_erc20.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Choose tocken: \", React.createElement(\"select\", {\n        onChange: this.changeTocken.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.tockens_to_display)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Balance: \", this.state.balanceTocken));\n    }\n  }, {\n    key: \"changeTocken\",\n    value: function changeTocken(event) {\n      var tocken = event.target.value;\n      var web3 = this.state.web3; //console.log(\"tocken\", tocken)\n\n      var bal1 = this.state.cur_tocken.tocken.methods.balanceOf('0x04cEAb79390F3de7D12C01899E49459fbB86E546');\n      console.log('bal1', bal1);\n      /*\n      this.state.tockens.map((number) => {\n      if (number.addr === tocken) {\n      console.log(number.addr, tocken)\n      this.setState({cur_tocken: number})\n      if (this.state.cur_user != '') {\n      console.log(this.state.cur_user.address)\n      let bal;\n      number.tocken.methods.balanceOf(this.state.cur_user.address, (err, res) => {\n      console.log('err:', err, 'res:', res)\n      bal = res;\n      })\n      this.setState({balanceTocken: bal})\n      //console.log(\"bal:\", bal)\n      }\n      }\n      })*/\n    }\n  }, {\n    key: \"onERC20Change\",\n    value: function onERC20Change(event) {\n      this.setState({\n        contrAddr: event.target.value\n      });\n    }\n  }, {\n    key: \"onPasswordChange\",\n    value: function onPasswordChange(event) {\n      this.setState({\n        privkey: event.target.value\n      });\n    }\n  }, {\n    key: \"ontoAddrChange\",\n    value: function ontoAddrChange(event) {\n      this.setState({\n        toAddr: event.target.value\n      });\n    }\n  }, {\n    key: \"onvalueChange\",\n    value: function onvalueChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(event) {\n      var _this2 = this;\n\n      try {\n        var web3 = this.state.web3;\n        var account1 = this.state.cur_user.address;\n        var account2 = this.state.toAddr;\n        var privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex'); //this.state.cur_user.privateKey)\n\n        console.log('privkey1', privkey1);\n        web3.eth.getTransactionCount(account1, function (err, txCount) {\n          //build the transaction\n          var txObject = {\n            nonce: web3.utils.toHex(txCount),\n            to: account2,\n            value: web3.utils.toHex(web3.utils.toWei(_this2.state.value, 'ether')),\n            gasLimit: web3.utils.toHex(21000),\n            gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei')) //sign the transaction\n\n          };\n          var tx = new Tx(txObject);\n          tx.sign(privkey1);\n          var serializedTx = tx.serialize();\n          var raw = '0x' + serializedTx.toString('hex'); //broadcast the transaction\n\n          web3.eth.sendSignedTransaction(raw, function (err, txHash) {\n            console.log('txHash:', txHash);\n          });\n        });\n        this.getBal(this.state.cur_user);\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n  }, {\n    key: \"importKey\",\n    value: function importKey(event) {\n      console.log('privkey', this.state.privkey);\n      var account;\n\n      try {\n        account = this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n        console.log('account', account);\n        var users = [account].concat(_toConsumableArray(this.state.users));\n        this.setState({\n          users: users\n        });\n        var accounts = [React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, account.address)].concat(_toConsumableArray(this.state.accounts));\n        this.setState({\n          accounts: accounts\n        });\n        this.setState({\n          cur_user: account\n        });\n        this.getBal(account);\n      } catch (e) {\n        console.log('error', e);\n      }\n    }\n  }, {\n    key: \"getBal\",\n    value: function getBal(account) {\n      var _this3 = this;\n\n      var web3 = this.state.web3;\n      var bal;\n      web3.eth.getBalance(account.address, function (err, wei) {\n        bal = web3.utils.fromWei(wei, 'ether');\n\n        _this3.setState({\n          balance: bal\n        });\n\n        console.log('balance:', bal);\n        setTimeout(function () {}, 10);\n      });\n    }\n  }, {\n    key: \"checkNetwork\",\n    value: function checkNetwork(event) {\n      //this.state = { accounts: '' , networks: ''}\n      console.log(this.data);\n    }\n  }, {\n    key: \"changeAddr\",\n    value: function changeAddr(event) {\n      var _this4 = this;\n\n      var Addr = event.target.value; //console.log(this.state.web3)\n\n      var web3 = this.state.web3;\n      console.log(\"Addr\", Addr);\n      var bal;\n      web3.eth.getBalance(Addr, function (err, wei) {\n        bal = web3.utils.fromWei(wei, 'ether');\n\n        _this4.setState({\n          balance: bal\n        });\n      });\n      var accounts = this.state.users;\n      var us;\n      accounts.map(function (number) {\n        if (number.address === Addr) {\n          us = number;\n\n          _this4.setState({\n            cur_user: number\n          });\n        }\n      });\n      setTimeout(function () {\n        console.log(\"cur_user:\", _this4.state.cur_user);\n      }, 10);\n      this.getBal(us); //console.log(\"us:\", us)\n    }\n  }, {\n    key: \"newAddr\",\n    value: function newAddr(event) {\n      //console.log(event.target.value)\n      //const accounts = this.state.accounts\n      var web3 = this.state.web3;\n      var account = web3.eth.accounts.create(); //accounts.append(account)\n\n      console.log(account);\n      var users = [account].concat(_toConsumableArray(this.state.users));\n      var accounts = [React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, account.address)].concat(_toConsumableArray(this.state.accounts)); //users.map((user) => {accounts = [<option>{user.address}</option>, ...this.state.accounts]})\n\n      this.setState({\n        users: users\n      });\n      this.setState({\n        cur_user: account\n      });\n      this.setState({\n        accounts: accounts\n      });\n      this.getBal(account);\n      console.log('accounts', this.state.accounts);\n      console.log('users', this.state.users);\n    }\n  }, {\n    key: \"interact_erc20\",\n    value: function interact_erc20(event) {\n      var abi = [{\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"string\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": false,\n        \"inputs\": [{\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"approve\",\n        \"outputs\": [{\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"totalSupply\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": false,\n        \"inputs\": [{\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"transferFrom\",\n        \"outputs\": [{\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"version\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"string\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [{\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }],\n        \"name\": \"balanceOf\",\n        \"outputs\": [{\n          \"name\": \"balance\",\n          \"type\": \"uint256\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"symbol\",\n        \"outputs\": [{\n          \"name\": \"\",\n          \"type\": \"string\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": false,\n        \"inputs\": [{\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"transfer\",\n        \"outputs\": [{\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": false,\n        \"inputs\": [{\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }, {\n          \"name\": \"_extraData\",\n          \"type\": \"bytes\"\n        }],\n        \"name\": \"approveAndCall\",\n        \"outputs\": [{\n          \"name\": \"success\",\n          \"type\": \"bool\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"constant\": true,\n        \"inputs\": [{\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        }],\n        \"name\": \"allowance\",\n        \"outputs\": [{\n          \"name\": \"remaining\",\n          \"type\": \"uint256\"\n        }],\n        \"type\": \"function\"\n      }, {\n        \"inputs\": [{\n          \"name\": \"_initialAmount\",\n          \"type\": \"uint256\"\n        }, {\n          \"name\": \"_tokenName\",\n          \"type\": \"string\"\n        }, {\n          \"name\": \"_decimalUnits\",\n          \"type\": \"uint8\"\n        }, {\n          \"name\": \"_tokenSymbol\",\n          \"type\": \"string\"\n        }],\n        \"type\": \"constructor\"\n      }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n          \"indexed\": true,\n          \"name\": \"_from\",\n          \"type\": \"address\"\n        }, {\n          \"indexed\": true,\n          \"name\": \"_to\",\n          \"type\": \"address\"\n        }, {\n          \"indexed\": false,\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n      }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n          \"indexed\": true,\n          \"name\": \"_owner\",\n          \"type\": \"address\"\n        }, {\n          \"indexed\": true,\n          \"name\": \"_spender\",\n          \"type\": \"address\"\n        }, {\n          \"indexed\": false,\n          \"name\": \"_value\",\n          \"type\": \"uint256\"\n        }],\n        \"name\": \"Approval\",\n        \"type\": \"event\"\n      }];\n      var addr = this.state.contrAddr;\n\n      if (addr != '') {\n        console.log(\"contrAddr: \", addr);\n        var tocken;\n\n        try {\n          tocken = new this.state.web3.eth.Contract(abi, addr); //this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n\n          console.log(tocken.methods);\n          console.log('tocken', tocken);\n          var tockens = [{\n            addr: addr,\n            tocken: tocken\n          }].concat(_toConsumableArray(this.state.tockens));\n          var cur_tocken = {\n            addr: addr,\n            tocken: tocken\n          };\n          var tockens_to_display = tockens.map(function (number) {\n            return React.createElement(\"option\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 261\n              },\n              __self: this\n            }, number.addr);\n          });\n          this.setState({\n            tockens: tockens\n          });\n          this.setState({\n            cur_tocken: cur_tocken\n          });\n          this.setState({\n            tockens_to_display: tockens_to_display\n          });\n          setTimeout(function () {}, 10);\n        } catch (e) {\n          console.log('error', e);\n        }\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/eth_wallet/src/App.js"],"names":["React","Component","Web3","Tx","secp256k1","PassThrough","App","ProjectId","networks","setState","map","number","loadBlockchainData","event","url","target","value","web3","props","state","accounts","balance","users","privkey","cur_user","toAddr","contrAddr","tockens","cur_tocken","tockens_to_display","balanceTocken","bind","changeAddr","newAddr","onPasswordChange","importKey","ontoAddrChange","onvalueChange","send","onERC20Change","interact_erc20","changeTocken","tocken","bal1","methods","balanceOf","console","log","account1","address","account2","privkey1","Buffer","from","privateKey","replace","eth","getTransactionCount","err","txCount","txObject","nonce","utils","toHex","to","toWei","gasLimit","gasPrice","tx","sign","serializedTx","serialize","raw","toString","sendSignedTransaction","txHash","getBal","e","account","privateKeyToAccount","bal","getBalance","wei","fromWei","setTimeout","data","Addr","us","create","abi","addr","Contract"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3'\nimport Tx from 'ethereumjs-tx'\nimport secp256k1 from 'secp256k1'\nimport { PassThrough } from 'stream';\n\n\nclass App extends Component {\n  // data = '';\n  \n\n  componentWillMount() {\n    const ProjectId = '723c0eab8d2e4f30a10fc4a2ce2a08f9'\n    const networks = [\n      'http://localhost:7545',\n      'https://mainnet.infura.io/v3/'+ProjectId,\n      'https://ropsten.infura.io/v3/'+ProjectId,\n      'https://rinkeby.infura.io/v3/'+ProjectId,\n      'https://kovan.infura.io/v3/'+ProjectId,\n      'https://goerli.infura.io/v3/'+ProjectId\n    ]\n    this.setState({networks: networks.map((number) =>\n      <option>{number}</option>)})\n    this.loadBlockchainData(null)\n  }\n\n  async loadBlockchainData(event) {\n    let url;\n    if (!event) {\n       url = 'http://localhost:7545'\n    }\n    else {\n       url = event.target.value\n    }\n\n    const web3 = new Web3(url)\n    this.setState({web3})\n    //setTimeout(()=>{this.setState({web3})},0\n    //const accounts = this.state.users\n    //console.log('accounts', accounts)\n    //this.setState({accounts: accounts})\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      accounts: '' ,\n      networks: '',\n      balance: '', \n      web3: Web3, \n      users: [], \n      privkey: '',\n      cur_user: '',\n      toAddr: '',\n      value: '',\n      contrAddr: '',\n      tockens: '',\n      cur_tocken: '',\n      tockens_to_display: '',\n      balanceTocken: ''\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>BEST WALLET</h1>\n        <p>Choose network:  <select onChange={this.loadBlockchainData.bind(this)}>{this.state.networks}</select></p>\n        <p>Choose Account: <select onChange={this.changeAddr.bind(this)}>{this.state.accounts}</select></p>\n        <p>Balance: {this.state.balance}</p>\n        <input type=\"submit\" value='Create new address' onClick={this.newAddr.bind(this)} />\n          <p><label> Private key (0x...):<input type=\"password\" name=\"privkey\" value={this.state.privkey}\n                            onChange={this.onPasswordChange.bind(this)}/></label><input type=\"submit\" value=\"Import\" onClick={this.importKey.bind(this)}/></p>\n        <h3>Send money</h3>\n        <p><label> To Address:<input type=\"text\" name=\"toAddr\" value={this.state.toAddr}\n                            onChange={this.ontoAddrChange.bind(this)}/></label></p>\n        <p><label> Value in eth:<input type=\"text\" name=\"value\" value={this.state.value}\n                            onChange={this.onvalueChange.bind(this)}/></label></p>\n        <p><input type=\"submit\" value=\"send\" onClick={this.send.bind(this)}/></p>\n        <h3>ERC20 tockens</h3>\n        <p><label>Add address of tockens:<input type=\"text\" name=\"value\" value={this.state.contrAddr}\n                onChange={this.onERC20Change.bind(this)}/></label>\n                <input type=\"submit\" value=\"add\" onClick={this.interact_erc20.bind(this)}/></p>\n        <p>Choose tocken: <select onChange={this.changeTocken.bind(this)}>{this.state.tockens_to_display}</select></p>\n        <p>Balance: {this.state.balanceTocken}</p>\n      </div>\n\n\n    );\n  }\n\n  changeTocken(event) {\n    const tocken = event.target.value;\n    const web3 = this.state.web3\n    //console.log(\"tocken\", tocken)\n    const bal1 = this.state.cur_tocken.tocken.methods.balanceOf('0x04cEAb79390F3de7D12C01899E49459fbB86E546');\n    console.log('bal1', bal1)/*\n    this.state.tockens.map((number) => {\n      if (number.addr === tocken) {\n        console.log(number.addr, tocken)\n        this.setState({cur_tocken: number})\n        if (this.state.cur_user != '') {\n          console.log(this.state.cur_user.address)\n          let bal;\n          number.tocken.methods.balanceOf(this.state.cur_user.address, (err, res) => {\n            console.log('err:', err, 'res:', res)\n            bal = res;\n          })\n          this.setState({balanceTocken: bal})\n          //console.log(\"bal:\", bal)\n        }\n      }\n    })*/\n  }\n\n  onERC20Change(event) {\n    this.setState({contrAddr: event.target.value});\n  }\n\n  onPasswordChange(event){\n    this.setState({privkey: event.target.value});\n  }\n\n  ontoAddrChange(event) {\n    this.setState({toAddr: event.target.value})\n  }\n\n  onvalueChange(event) {\n    this.setState({value: event.target.value})\n  }\n\n  send(event) {\n    try {\n      const web3 = this.state.web3\n      const account1 = this.state.cur_user.address\n      const account2 = this.state.toAddr\n      const privkey1 = Buffer.from(this.state.cur_user.privateKey.replace('0x', ''), 'hex')//this.state.cur_user.privateKey)\n      console.log('privkey1', privkey1)\n\n\n      web3.eth.getTransactionCount(account1, (err, txCount) => {\n\n        //build the transaction\n        const txObject = {\n          nonce: web3.utils.toHex(txCount),\n          to: account2,\n          value: web3.utils.toHex(web3.utils.toWei(this.state.value, 'ether')),\n          gasLimit: web3.utils.toHex(21000),\n          gasPrice: web3.utils.toHex(web3.utils.toWei('10', 'gwei'))\n        }\n\n        //sign the transaction\n        const tx = new Tx(txObject);\n        tx.sign(privkey1);\n        const serializedTx = tx.serialize();\n        const raw = '0x' + serializedTx.toString('hex')\n\n        //broadcast the transaction\n        web3.eth.sendSignedTransaction(raw, (err, txHash) => {\n          console.log('txHash:', txHash)\n        })\n      });\n\n      this.getBal(this.state.cur_user)\n      }\n    catch(e)  {\n      console.log('error', e);\n    }\n  }\n\n  importKey(event) {\n    console.log('privkey',this.state.privkey)\n    let account;\n    try {\n      account = this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n      console.log('account', account);\n      var users = [account, ...this.state.users]\n      this.setState({users: users})\n      var accounts = [<option>{account.address}</option>, ...this.state.accounts]\n      this.setState({accounts: accounts})\n      this.setState({cur_user: account})\n      this.getBal(account)\n    }\n    catch(e)  {\n      console.log('error', e);\n    }\n    \n  }\n\n  getBal(account) {\n    const web3 = this.state.web3\n    let bal;\n    web3.eth.getBalance(account.address, (err, wei) => {\n      bal = web3.utils.fromWei(wei, 'ether');\n      this.setState({balance: bal})\n      console.log('balance:', bal)\n      setTimeout(() => {}, 10)\n    })\n  }\n\n   checkNetwork(event){\n     //this.state = { accounts: '' , networks: ''}\n     console.log(this.data)\n   }\n  \n   changeAddr(event) {\n    const Addr = event.target.value\n    //console.log(this.state.web3)\n    const web3 = this.state.web3\n    console.log(\"Addr\", Addr) \n    let bal;\n    web3.eth.getBalance(Addr, (err, wei) => {\n      bal = web3.utils.fromWei(wei, 'ether');\n      this.setState({balance: bal})\n    })\n    var accounts = this.state.users\n    let us\n    accounts.map((number) => {\n      \n      if (number.address === Addr) {\n        us = number\n        this.setState({cur_user: number})\n      }\n    })\n    setTimeout(()=>{console.log(\"cur_user:\", this.state.cur_user)},10)\n    this.getBal(us)\n    //console.log(\"us:\", us)\n   }\n\n   newAddr(event) {\n    //console.log(event.target.value)\n    //const accounts = this.state.accounts\n    const web3 = this.state.web3\n    var account = web3.eth.accounts.create()\n    //accounts.append(account)\n    console.log(account)\n    var users = [account, ...this.state.users]\n    var accounts = [<option>{account.address}</option>, ...this.state.accounts]\n    //users.map((user) => {accounts = [<option>{user.address}</option>, ...this.state.accounts]})\n    this.setState({users: users})\n    this.setState({cur_user: account})\n    this.setState({accounts: accounts})\n    this.getBal(account)\n    console.log('accounts', this.state.accounts)\n    console.log('users', this.state.users)\n   }\n\n   interact_erc20(event) {\n    const abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"name\":\"_tokenName\",\"type\":\"string\"},{\"name\":\"_decimalUnits\",\"type\":\"uint8\"},{\"name\":\"_tokenSymbol\",\"type\":\"string\"}],\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]\n    const addr = this.state.contrAddr\n    if (addr != '') {\n      console.log(\"contrAddr: \", addr)\n      let tocken;\n      try {\n        tocken = new this.state.web3.eth.Contract(abi, addr)//this.state.web3.eth.accounts.privateKeyToAccount(this.state.privkey);\n        console.log(tocken.methods)\n        console.log('tocken', tocken);\n        var tockens = [{addr: addr, tocken: tocken}, ...this.state.tockens]\n        var cur_tocken = {addr: addr, tocken: tocken}\n        var tockens_to_display = tockens.map((number) => <option>{number.addr}</option>)\n        this.setState({tockens: tockens})\n        this.setState({cur_tocken: cur_tocken})\n        this.setState({tockens_to_display: tockens_to_display})\n        setTimeout(()=>{},10)\n      }\n      catch(e)  {\n        console.log('error', e);\n      }\n    }\n  \n   }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}